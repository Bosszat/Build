-- üéí Roblox ‚Üí Google Sheet (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥)
-- ‚úÖ ‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ã‡πâ‡∏≥ ‡πÅ‡∏ï‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏ó‡∏ô
-- üß† by Phakaphop GPT-5 Pro (with Coins)

---------------------------------------------------
local GOOGLE_SCRIPT_URL = "https://script.google.com/macros/s/AKfycbySnPSDKKzRirKxXDmgZOJn1y2VH1GAL7dn27DDcXBZVkN0WAluGc8xG3ehIQ9bJhBgOQ/exec"

-- üéØ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏û‡πÅ‡∏•‡∏∞‡πÑ‡∏Ç‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á
local ALLOWED_STATUS = { "Halloween", "Snow" }
local ALLOWED_EGGS = {
	"GeneralKongEgg", "GodzillaEgg", "UnicornProEgg", "SaberCubEgg",
	"HalloweenEgg", "SailfishEgg", "OctopusEgg", "MetroGiraffeEgg", "UnicornEgg"
}

---------------------------------------------------
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

local RARITY_ICONS = {
	Normal = "‚ö™", Golden = "‚ú®", Diamond = "üíé", Electric = "‚ö°",
	Fire = "üî•", Jurassic = "ü¶ñ", Snow = "‚ùÑÔ∏è", Halloween = "üéÉ"
}

---------------------------------------------------
-- üí∞ ‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô M / B / T / Q
---------------------------------------------------
local function formatNumber(num)
	if num >= 1e15 then
		return string.format("%.2fQ", num / 1e15)
	elseif num >= 1e12 then
		return string.format("%.2fT", num / 1e12)
	elseif num >= 1e9 then
		return string.format("%.2fB", num / 1e9)
	elseif num >= 1e6 then
		return string.format("%.2fM", num / 1e6)
	elseif num >= 1e3 then
		return string.format("%.0fK", num / 1e3)
	else
		return tostring(num)
	end
end

---------------------------------------------------
-- üí∞ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ Coins
---------------------------------------------------
local function getPlayerCoins()
	local coinsValue = 0
	-- ‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡πÉ‡∏ô leaderstats ‡∏´‡∏£‡∏∑‡∏≠ Data
	if localPlayer:FindFirstChild("leaderstats") then
		local coinStat = localPlayer.leaderstats:FindFirstChild("Coins") or localPlayer.leaderstats:FindFirstChild("Coin")
		if coinStat and tonumber(coinStat.Value) then
			coinsValue = tonumber(coinStat.Value)
		end
	elseif localPlayer:FindFirstChild("PlayerData") then
		local coinStat = localPlayer.PlayerData:FindFirstChild("Coins")
		if coinStat and tonumber(coinStat.Value) then
			coinsValue = tonumber(coinStat.Value)
		end
	end
	return coinsValue
end

---------------------------------------------------
-- üì¶ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏Ç‡πà
---------------------------------------------------
local function getDataFolder()
	return localPlayer:FindFirstChild("PlayerGui") and localPlayer.PlayerGui:FindFirstChild("Data")
end

local function isAllowedStatus(status)
	for _, s in ipairs(ALLOWED_STATUS) do
		if s == status then return true end
	end
	return false
end

local function isAllowedEgg(eggName)
	for _, n in ipairs(ALLOWED_EGGS) do
		if n == eggName then return true end
	end
	return false
end

local function getEggData(folder)
	local eggs_with_status = {}
	local total = 0
	local eggFolder = folder and folder:FindFirstChild("Egg")

	if eggFolder then
		for _, e in ipairs(eggFolder:GetChildren()) do
			if e:IsA("Configuration") and not e:GetAttribute("D") then
				local egg_name = e:GetAttribute("T")
				local status = e:GetAttribute("M") or e:GetAttribute("Status") or e:GetAttribute("Buff") or "Normal"
				if egg_name and isAllowedEgg(egg_name) and isAllowedStatus(status) then
					local icon = RARITY_ICONS[status] or "‚ö™"
					local key = string.format("%s (%s %s)", egg_name, icon, status)
					eggs_with_status[key] = (eggs_with_status[key] or 0) + 1
					total += 1
				end
			end
		end
	end
	return eggs_with_status, total
end

---------------------------------------------------
-- üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Google Apps Script
---------------------------------------------------
local function sendToGoogleScript(username, eggText, coinsText)
	local data = { user = username, eggs = eggText, coins = coinsText }
	local jsonData = HttpService:JSONEncode(data)

	local success, response = pcall(function()
		local req = {
			Url = GOOGLE_SCRIPT_URL,
			Method = "POST",
			Headers = { ["Content-Type"] = "application/json" },
			Body = jsonData
		}
		if syn and syn.request then return syn.request(req)
		elseif request then return request(req)
		elseif http_request then return http_request(req)
		end
	end)

	if success and response then
		print(string.format("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (%s) | üí∞ %s | ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: %s", username, coinsText, response.StatusCode))
	else
		warn("‚ùå ‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", response)
	end
end

---------------------------------------------------
-- üîÅ Loop ‡∏ó‡∏∏‡∏Å ‡πÜ 5 ‡∏ß‡∏¥
---------------------------------------------------
task.spawn(function()
	while task.wait(5) do
		local folder = getDataFolder()
		if folder then
			local eggs_with_status = getEggData(folder)
			local names = {}
			for k in pairs(eggs_with_status) do table.insert(names, k) end
			table.sort(names)

			local eggTextParts = {}
			for _, name in ipairs(names) do
				table.insert(eggTextParts, string.format("%s √ó %d", name, eggs_with_status[name]))
			end

			local eggText = table.concat(eggTextParts, ", ")
			if eggText == "" then eggText = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏Ç‡πà‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏û‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤" end

			local coinsValue = getPlayerCoins()
			local coinsText = formatNumber(coinsValue)

			sendToGoogleScript(localPlayer.Name, eggText, coinsText)
		else
			warn("‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Inventory")
		end
	end
end)

print("ü•ö ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏Ç‡πà + ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß...")
